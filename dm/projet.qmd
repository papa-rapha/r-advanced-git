---
title: "Projet : R avancé et introduction à Git"
author: "Raphaël Nedellec"
format: pdf
---

# Projet de fin de classe

L'objectif du projet est le suivant : valider les différents éléments étudiés durant le cours. Cela comporte la construction d'une vignette, l'utilisation de quarto, et l'utilisation de github actions par le biais de la librairie `pkgdown`.

# Deux projets sous github

## Librairie

Nous allons reprendre le développement de notre librairie. L'idée est de compléter la librairie obtenue à l'issue de l'exercice de la semaine 5 avec une nouvelle fonction `generer_rapport`.

1. Créez un dossier `inst` à la racine de la librairie, et déposez le fichier paramétré `rapport.qmd` obtenu à l'issue de l'exercice de la semaine 5.
2. Implémentez une fonction `generer_rapport` qui prendra en argument les paramètres `commune` et `departement` qui permettront de configurer pour quelles communes et quels départements compiler le rendu. Un troisième paramètre `output` sera défini pour préciser le chemin d'écriture du document généré.
Indication : une fois le package installé, nous pouvons utiliser la fonction `system.file` pour accéder aux fichiers présents dans le dossier `inst` d'un package au build time. Exemple, le fichier `inst/fichier.qmd`  du package `example` pourra être localisé en utilisant l'appel `system.file("fichier.qmd", library = "example") une fois la librairie `example` installée. 
3. Assurez-vous de documenter la fonction, en s'assurant que les paramètres soient bien décrits, les dépendances signalées et que la librairie soit à jour.
4. Faites les commits/push nécessaires pour mettre à jour le package sous github.

## Vignette

5. En utilisant la fonction `usethis::use_vignette`, initialiser une vignette pour votre package dont le titre sera `Générer un rapport d'analyses`.
6. Par défault, les vignettes utilisent rmarkdown. Nous souhaitons plutôt utiliser quarto. Changez les entêtes .yaml de la vignette pour ainsi que le champ VignetteBuilder dans le fichier DESCRIPTION pour utiliser quarto. Indications: vous pourrez vous aider de ce site: https://cran.r-project.org/web/packages/quarto/vignettes/hello.html pour faire les configurations.
7. Décrivez dans la vignette l'utilisation des fonctions `summary.commune`, `summary.departement`, et de la fonction `generer_rapport`. Utilisez un style litéral et assurez-vous d'utiliser les bonnes options de `chunks` pour avoir une vignette didactique.

## pkgdown

8. Installez `pkgdown`.
9. En utilisant `usethis`, et la fonction `use_pkgdown_github_pages`, initialisez le setup du projet pour utiliser des github pages et construire une documentation de votre projet.
10. Faites les commits nécessaires, et le push sur le répertoire projet.

Félicitations ! Vous avez construit une librairie fonctionnelle, documentée, et exposée avec succès. N'hésitez pas à peaufiner la documentation pour avoir le rendu le plus propre possible sur la documentation des fonctions ainsi que la page de garde.
Pour valider le rendu, merci d'envoyer un mail à mon adresse `raphael.nedellec@univ-nantes.fr` avec votre nom, prénom, url du projet github, ainsi que l'url de la documentation.

Les éléments suivants seront pris en considération pour l'évaluation:

- la librairie est elle installable dans un projet vierge avec l'instruction `remotes::install()`.
- la documentation est-elle présente ? exposée avec `pkgdown` ?
- qualité du code, des tests, respect des conventions de construction de librairie
- possibilité d'utiliser la fonction `generer_rapport` ainsi que l'ensemble des fonctions nécessaires au bon fonctionnement du package.
Tout effort supplémentaire - dans l'utilisation de dépendances utiles, dans la qualité visuelle et rédactionnelle du site de documentation - sera aussi évalué et récompensé.
